.spacer 
  h3 Templates
  dt
    p.hint-text Personally, I haven't had a project in a long time that didn't need clientside templates. Bolt doesn't want you to learn a new templating language, just use Jade! It's all setup for you, just drop new templates into the template folder, and bam, you'll get a new shiny templates.js file, ready to render your content.
    p.hint-text With client-side Jade, you're fully qualified and ready for shared inheritance, mixins, etc with this static build system. Below is a rendered template, as an example. See template-example.js and app.js for the code that did this.

    h5 Client Template Example
    #list-template-example Rendering...

  dd: section 
    h5.text-center Need this?

    p: b YES: 

    div.push-bottom
      code _jade/client-templates
      div Anything jade dropped into here, will get turned into a javascript function. You can utilize shared mixins, includes, layouts and more, all with your server or static jade files.

    div.push-bottom
      code js/templates.js
      div This file is generated by Bolt/ClientJade, whenever a file changes in the jade template directory. This process is similar to other template engines, that create a file for you to use from javascript. See <a href="http://projects.jga.me/clientjade/" target="_blank">ClientJade</a>.

  dd: section
    b NO: 
    div Let's get rid of the pieces then
    ul
      li Remove the watch command
      li Delete the _jade/templates folder
      li Delete the shell command from tasks/shell.coffee
      li Remove ClientJade from package.json
      li Remove templates.js from app.coffee (line 27)
      li Remove templates.js from scripts.jade